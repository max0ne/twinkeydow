{"version":3,"sources":["common/config.js","common/api.js","redux/middleware.js","common/util.js","model/listo.js","component/Navbar.js","component/Home.js","component/OAuth_callback.js","component/Welcome.js","component/App.js","registerServiceWorker.js","index.js","redux/reducer.js"],"names":["config","oauthLoginURL","userBasedRecommendURL","similarRepoAPIURL","ghToken","undefined","ghClient","axios","create","baseURL","similarRepoClient","getUserBasedRecommend","_getUserBasedRecommend","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","Error","get","concat","abrupt","sent","data","stop","getUser","_x","_getUser","_callee2","access_token","_context2","getUserStars","_x2","_getUserStars","_callee3","nextPageURL","resp","_parseLink","last","_context3","link","headers","_ref","_link$split","_link$split2","url1","tag1","url2","tag2","split","Object","slicedToArray","defineProperty","nextStarPageURL","getSimilar","_x3","_getSimilar","_callee4","rid","offset","limit","sims","_args4","_context4","length","slice","getRepoDetail","_x4","_getRepoDetail","_callee5","_context5","getRepoLanguages","_x5","_getRepoLanguages","_callee6","repoIdentifier","_context6","loadGithubTokenFromLocalStorage","window","localStorage","getItem","StarSource","classCallCheck","_pool","_nextPageURL","reachedEnd","nn","splice","api","_this$_pool","push","toConsumableArray","ListoSource","_this","onUpdate","_grow","_ref2","asyncToGenerator","mark","recs","starRepos","_recommendoPool","_populateListo","starSource","pop","forEach","sr","repoDetails","id","Promise","all","map","_ref3","t0","t1","t2","_populateRecommendoPool","call","_listos","_showMoreOf3","_showMoreOf2","_populateListo2","createClass","key","value","from_rid","similars","_this$_recommendoPool","sim","to_rid","score","listoRids","nonDuplicateRecs","_this2","_","filter","reject","rec","includes","_ref4","repoDetail","catch","busy","_showMoreOf","console","error","_x6","_callee7","moreFromListPool","_context7","flatmap","listo","_x7","_callee8","_context8","_x8","Navbar","possibleConstructorReturn","getPrototypeOf","handleLogout","bind","assertThisInitialized","props","dispatch","type","user","location","href","react_default","createElement","dist_es","Item","size","circular","src","avatar_url","wide","trigger","renderUserAvatar","on","position","fluid","vertical","onClick","pointing","secondary","name","as","urlParse","process","pathname","Menu","renderLoggedIn","renderNotLogIn","Component","connect","state","Home","showMore","rids","_args","log","uniq","listoSource","listos","li","range","showMoreOf","Math","floor","random","grow","repo","langs","has","repoLangs","owner","login","setState","objectSpread","renderRecommendRepo","renderRepo","userBasedRepos","throttle","firstRender","r","err","t7","_toast","response","body","status","toString","Image","Content","Header","html_url","full_name","Meta","description","Extra","topics","join","basedOnRepo","language","firstLangs","keys","lang","isNil","sort","b","className","target","rel","style","background","languageMap","color","Description","extra","icon","textAlign","role","aria-label","active","Fragment","component_Navbar","renderItemBased","renderNoRecommendAvailable","renderLoading","colcnt","max","ceil","document","clientWidth","forceUpdate","columns","centered","col","Column","idx","onOnScreen","once","fireOnMount","Group","height","_this3","Welcome","githubOAuthURL","encodeURIComponent","App","redirectIfNecessary","gotoWelcome","gotoHome","history","setTimeout","endsWith","query","middleware","lib","hideProgressBar","react_router_dom_es","ref","router","path","component","OAuth_callback","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","currentUser","action","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","token","result","getState","defaults","setItem","ReactDOM","render","es","component_App","getElementById","URL","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oZAAeA,EAAA,CACbC,cAAe,yEACfC,sBAAuB,uEAEvBC,kBAAmB,2ECGjBC,OAAUC,EACDC,EAAWC,IAAMC,OAAO,CACnCC,QAAS,2BAGEC,EAAoBH,IAAMC,OAAO,CAC5CC,QAAST,EAAOG,oBAQX,SAAeQ,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACAlB,EADA,CAAAgB,EAAAE,KAAA,cAEG,IAAIC,MAAM,qDAFb,cAAAH,EAAAE,KAAA,EAISf,IAAMiB,IAAN,GAAAC,OAAazB,EAAOE,sBAApB,sBAAAuB,OAA8DrB,IAJvE,cAAAgB,EAAAM,OAAA,SAAAN,EAAAO,KAImFC,MAJnF,wBAAAR,EAAAS,SAAAb,EAAAF,gCAOA,SAAegB,EAAtBC,GAAA,OAAAC,EAAAnB,MAAAC,KAAAC,sDAAO,SAAAkB,EAAuBC,GAAvB,OAAAjB,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACShB,EAASkB,IAAT,sBAAAC,OAAmCS,IAD5C,cAAAC,EAAAT,OAAA,SAAAS,EAAAR,KAC6DC,MAD7D,wBAAAO,EAAAN,SAAAI,EAAAnB,gCAaA,SAAesB,EAAtBC,GAAA,OAAAC,EAAAzB,MAAAC,KAAAC,sDAAO,SAAAwB,EAA4BC,GAA5B,IAAAC,EAAAC,EAAApB,EAAAqB,EAAA,OAAA1B,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACchB,EAASkB,IAAIgB,GAAe,wBAD1C,cACCC,EADDG,EAAAjB,KATYkB,EAWgBJ,EAAKK,QAAQD,MAAQ,GAX/BE,cAAAC,OAAAC,OAEdC,OAAMC,OAAMC,OAAMC,EAFJL,EAEYH,EAAKS,MAAM,oDAFvBL,EAAAM,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEdE,EAFcD,EAAA,GAERE,EAFQF,EAAA,GAEFG,EAFEH,EAAA,GAEII,EAFJJ,EAAA,GAGvBF,EAAA,GAAAQ,OAAAE,EAAA,EAAAF,CAAAR,EACGI,EAAOD,GADVK,OAAAE,EAAA,EAAAF,CAAAR,EAEGM,EAAOD,GAMF9B,GAFHoB,EANLK,GAQQzB,KAAMqB,EAFTD,EAESC,KAFTC,EAAAlB,OAAA,SAGE,CACLE,KAAMa,EAAKb,KACX8B,gBAAiBf,IAASH,OAAcnC,EAAYiB,IALjD,wBAAAsB,EAAAf,OATP,IAAmBgB,EAAME,EAAAC,EAAAC,EAEdC,EAAMC,EAAMC,EAAMC,GAOtBd,EAAAzB,gCASA,SAAe6C,EAAtBC,GAAA,OAAAC,EAAAhD,MAAAC,KAAAC,sDAAO,SAAA+C,EAA0BC,GAA1B,IAAAC,EAAAC,EAAAC,EAAAC,EAAApD,UAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAA+B0C,EAA/BG,EAAAE,OAAA,QAAAhE,IAAA8D,EAAA,GAAAA,EAAA,GAAwC,EAAGF,EAA3CE,EAAAE,OAAA,QAAAhE,IAAA8D,EAAA,GAAAA,EAAA,GAAmD,EAAnDC,EAAA9C,KAAA,EACeZ,EAAkBc,IAAlB,SAAAC,OAA+BsC,EAA/B,WAAAtC,OAA4CuC,EAASC,IADpE,cACCC,EADDE,EAAAzC,KAC8EC,KAD9EwC,EAAA1C,OAAA,SAEEwC,EAAKI,MAAMN,EAAQE,EAAKG,SAF1B,wBAAAD,EAAAvC,SAAAiC,EAAAhD,gCAKA,SAAeyD,EAAtBC,GAAA,OAAAC,EAAA5D,MAAAC,KAAAC,sDAAO,SAAA2D,EAA6BX,GAA7B,OAAA9C,EAAAC,EAAAC,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAArD,KAAA,EACShB,EAASkB,IAAT,gBAAAC,OAA6BsC,IADtC,cAAAY,EAAAjD,OAAA,SAAAiD,EAAAhD,KAC8CC,MAD9C,wBAAA+C,EAAA9C,SAAA6C,EAAA5D,gCAIA,SAAe8D,EAAtBC,GAAA,OAAAC,EAAAjE,MAAAC,KAAAC,sDAAO,SAAAgE,EAAgCC,GAAhC,OAAA/D,EAAAC,EAAAC,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EACShB,EAASkB,IAAT,UAAAC,OAAuBuD,EAAvB,eADT,cAAAC,EAAAvD,OAAA,SAAAuD,EAAAtD,KAC6DC,MAD7D,wBAAAqD,EAAApD,SAAAkD,EAAAjE,gCCzDA,IAEMoE,EAAkC,WAC7C,OAAOC,OAAOC,aAAaC,QAHO,0ECS7B,aCRDC,aACJ,SAAAA,IAAe/B,OAAAgC,EAAA,EAAAhC,CAAAzC,KAAAwE,GACbxE,KAAK0E,MAAQ,GACb1E,KAAK2E,kBAAepF,EACpBS,KAAK4E,YAAa,kFAQVC,mFACJ7E,KAAK4E,oDACA,gBAIL5E,KAAK0E,MAAMnB,QAAUsB,4CAChB7E,KAAK0E,MAAMI,OAAO,EAAGD,2BAGUE,EAAiB/E,KAAK2E,qCAAtD7D,SAAM8B,oBACd5C,KAAK4E,WAAa5E,KAAK2E,eAAiB/B,EACxC5C,KAAK2E,aAAe/B,GACpBoC,EAAAhF,KAAK0E,OAAMO,KAAXlF,MAAAiF,EAAAvC,OAAAyC,EAAA,EAAAzC,CAAmB3B,sBACZd,KAAK0E,MAAMI,OAAO,EAAGD,wGAgBnBM,EAAb,WAKE,SAAAA,IAAgC,IAAAC,EAAApF,KAApBqF,EAAoBpF,UAAAsD,OAAA,QAAAhE,IAAAU,UAAA,GAAAA,UAAA,GAAX,aAAWwC,OAAAgC,EAAA,EAAAhC,CAAAzC,KAAAmF,GAAAnF,KA6EhCsF,MA7EgC,eAAAC,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KA6ExB,SAAAhE,EAAOoD,GAAP,IAAAa,EAAAC,EAAA,OAAAxF,EAAAC,EAAAC,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,WAEAkF,EAAON,EAAKQ,gBAAgBd,OAAO,EAAGD,IACnCtB,SAAWsB,EAHd,CAAA/C,EAAAtB,KAAA,eAAAsB,EAAAtB,KAAA,EAIE4E,EAAKS,eAAeH,GAJtB,cAAA5D,EAAAlB,OAAA,sBAMK8E,EAAKnC,OAAS,GANnB,CAAAzB,EAAAtB,KAAA,gBAAAsB,EAAAtB,KAAA,GAOE4E,EAAKS,eAAeH,GAPtB,QAQJb,GAAMa,EAAKnC,OARP,eAAAzB,EAAAtB,KAAA,GAckB4E,EAAKU,WAAWC,IAAIlB,GAdtC,YAcAc,EAdA7D,EAAAjB,MAiBImF,QAAQ,SAACC,GAAD,OAAQb,EAAKc,YAAYD,EAAGE,IAAMF,IAE3B,IAArBN,EAAUpC,OAnBR,CAAAzB,EAAAtB,KAAA,SAoBJ4E,EAAKR,YAAa,EAClBQ,EAAKC,WArBDvD,EAAAtB,KAAA,wBAAAsB,EAAAtB,KAAA,GAwBE4F,QAAQC,IAAIV,EAAUW,IAAV,eAAAC,EAAA9D,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAAc,SAAAtE,EAAO8E,GAAP,OAAA9F,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAmF,GAC9BpB,EAD8B/D,EAAAoF,GACDR,EAAGE,GADF9E,EAAAb,KAAA,EACYuE,EAAekB,EAAGE,IAD9B,OAAA9E,EAAAqF,GAAArF,EAAAR,KAAAQ,EAAAmF,GACzBG,wBADyBC,KAAAvF,EAAAmF,GAAAnF,EAAAoF,GAAApF,EAAAqF,IAAA,wBAAArF,EAAAN,SAAAI,EAAAnB,SAAd,gBAAA8C,GAAA,OAAAyD,EAAAxG,MAAAC,KAAAC,YAAA,KAxBd,eAAA6B,EAAAtB,KAAA,GA2BE4E,EAAKS,eAAeT,EAAKQ,gBAAgBd,OAAO,EAAGD,IA3BrD,yBAAA/C,EAAAf,SAAAU,EAAAzB,SA7EwB,gBAAAuB,GAAA,OAAAgE,EAAAxF,MAAAC,KAAAC,YAAA,GAE9BD,KAAKqF,SAAWA,EAChBrF,KAAK8F,WAAa,IAAItB,EACtBxE,KAAK4F,gBAAkB,GACvB5F,KAAK6G,QAAU,GACf7G,KAAK4E,YAAa,EAElB5E,KAAKkG,YAAc,GAbvB,IAAAZ,EAAAwB,EAAAC,EAAAC,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAA0C,EAAA,EAAA+B,IAAA,SAAAC,MAAA,WAiBI,OAAO1E,OAAAyC,EAAA,EAAAzC,CAAIzC,KAAK6G,WAjBpB,CAAAK,IAAA,0BAAAC,MAAA,SAoB0BC,EAAUC,GAAU,IAAAC,GAC1CA,EAAAtH,KAAK4F,iBAAgBX,KAArBlF,MAAAuH,EAAA7E,OAAAyC,EAAA,EAAAzC,CAA6B4E,EAASf,IAAI,SAACiB,GAAD,MAAU,CAClDH,WACAI,OAAQD,EAAItE,IACZwE,MAAOF,EAAIA,WAxBjB,CAAAL,IAAA,iBAAAC,OAAAH,EAAAvE,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAAA,SAAA7B,EA4BuB8B,GA5BvB,IAAAgC,EAAAC,EAAAC,EAAA5H,KAAA,OAAAG,EAAAC,EAAAC,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cA8BUkH,EAAYG,IAAEvB,IAAItG,KAAK6G,QAAS,UAAUiB,OAAO,SAAC7E,GAAD,QAAWA,IAC5D0E,EAAmBE,IAAEE,OAAOrC,EAAM,SAAAsC,GAAG,OAAIH,IAAEI,SAASP,EAAWM,EAAIR,UA/B7E3D,EAAArD,KAAA,EAkCU4F,QAAQC,IAAIsB,EAAiBrB,IAAjB,eAAA4B,EAAAzF,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAAqB,SAAAzC,EAAOgF,GAAP,IAAAG,EAAA,OAAAhI,EAAAC,EAAAC,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EAEZuE,EAAkBiD,EAAIR,QAAQY,MAAM,cAFxB,UAE/BD,EAF+B7E,EAAAzC,KAAA,CAAAyC,EAAA9C,KAAA,eAAA8C,EAAA1C,OAAA,iBAMrCgH,EAAK1B,YAAY8B,EAAIR,QAAUW,EAC/BP,EAAKf,QAAQ5B,KAAK+C,GAPmB,wBAAA1E,EAAAvC,SAAAiC,EAAAhD,SAArB,gBAAA+D,GAAA,OAAAmE,EAAAnI,MAAAC,KAAAC,YAAA,KAlCtB,OA2CID,KAAKqF,WA3CT,wBAAAxB,EAAA9C,SAAA6C,EAAA5D,SAAA,SAAA0D,GAAA,OAAAsD,EAAAjH,MAAAC,KAAAC,cAAA,CAAAiH,IAAA,aAAAC,OAAAJ,EAAAtE,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAAA,SAAAxB,EA8CmBhB,GA9CnB,OAAA9C,EAAAC,EAAAC,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,WA+CQR,KAAKqI,KA/Cb,CAAAlE,EAAA3D,KAAA,eAAA2D,EAAAvD,OAAA,wBAkDIZ,KAAKqI,MAAO,EACZrI,KAAKqF,WAnDTlB,EAAA5D,KAAA,EAAA4D,EAAA3D,KAAA,EAqDYR,KAAKsI,YAAYrF,GArD7B,OAAAkB,EAAA3D,KAAA,gBAAA2D,EAAA5D,KAAA,EAAA4D,EAAAqC,GAAArC,EAAA,SAuDMoE,QAAQC,MAARrE,EAAAqC,IAvDN,QAyDIxG,KAAKqI,MAAO,EACZrI,KAAKqF,WA1DT,yBAAAlB,EAAApD,SAAAkD,EAAAjE,KAAA,qBAAAyI,GAAA,OAAA1B,EAAAhH,MAAAC,KAAAC,cAAA,CAAAiH,IAAA,cAAAC,OAAAL,EAAArE,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAAA,SAAAiD,EA6DoBzF,GA7DpB,IAAA0F,EAAAvF,EAAA,OAAAjD,EAAAC,EAAAC,KAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAApI,MAAA,aA8DUmI,EAAmB3I,KAAK4F,gBAAgBkC,OAAO,SAACE,GAAD,OAASA,EAAIZ,WAAanE,KAC1DM,OAAS,GA/DlC,CAAAqF,EAAApI,KAAA,eAgEMR,KAAK6G,QAAUgB,IAAEgB,QAAQ7I,KAAK6G,QAAS,SAACiC,GACtC,OAAIA,EAAMtB,SAAWvE,EACnB,CAAQ6F,GAARnI,OAAA8B,OAAAyC,EAAA,EAAAzC,CAAkBkG,IAEb,CAACG,KAEV9I,KAAKqF,WAtEXuD,EAAAhI,OAAA,wBAAAgI,EAAApI,KAAA,EA0EuBuE,EAAe9B,EAAKjD,KAAK6G,QAAQiB,OAAO,SAACgB,GAAD,OAAWA,EAAM1B,WAAanE,IAAKM,QA1ElG,cA0EUH,EA1EVwF,EAAA/H,KAAA+H,EAAApI,KAAA,GA2EUR,KAAK6F,eAAezC,EAAKkD,IAAI,SAACiB,GAAD,MAAU,CAC3CH,SAAUnE,EACVuE,OAAQD,EAAItE,IACZwE,MAAOF,EAAIA,QA9EjB,yBAAAqB,EAAA7H,SAAA2H,EAAA1I,SAAA,SAAA+I,GAAA,OAAAjC,EAAA/G,MAAAC,KAAAC,cAAA,CAAAiH,IAAA,OAAAC,OAAA7B,EAAA7C,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAAA,SAAAuD,EAqHanE,GArHb,OAAA1E,EAAAC,EAAAC,KAAA,SAAA4I,GAAA,cAAAA,EAAA1I,KAAA0I,EAAAzI,MAAA,WAsHQR,KAAKqI,OAAQrI,KAAK4E,WAtH1B,CAAAqE,EAAAzI,KAAA,eAAAyI,EAAArI,OAAA,wBAyHIZ,KAAKqI,MAAO,EACZrI,KAAKqF,WA1HT4D,EAAA1I,KAAA,EAAA0I,EAAAzI,KAAA,EA4HYR,KAAKsF,MAAMT,GA5HvB,OAAAoE,EAAAzI,KAAA,gBAAAyI,EAAA1I,KAAA,EAAA0I,EAAAzC,GAAAyC,EAAA,SA8HMV,QAAQC,MAARS,EAAAzC,IA9HN,QAgIIxG,KAAKqI,MAAO,EACZrI,KAAKqF,WAjIT,yBAAA4D,EAAAlI,SAAAiI,EAAAhJ,KAAA,qBAAAkJ,GAAA,OAAA5D,EAAAvF,MAAAC,KAAAC,gBAAAkF,EAAA,YCxCMgE,cAEJ,SAAAA,IAAc,IAAA/D,EAAA,OAAA3C,OAAAgC,EAAA,EAAAhC,CAAAzC,KAAAmJ,IACZ/D,EAAA3C,OAAA2G,EAAA,EAAA3G,CAAAzC,KAAAyC,OAAA4G,EAAA,EAAA5G,CAAA0G,GAAAvC,KAAA5G,QACKsJ,aAAelE,EAAKkE,aAAaC,KAAlB9G,OAAA+G,EAAA,EAAA/G,QAAA+G,EAAA,EAAA/G,CAAA2C,KAFRA,8EAMZpF,KAAKyJ,MAAMC,SAAS,CAClBC,KAAM,cACNvI,kBAAc7B,EACdqK,UAAMrK,IAER8E,OAAOwF,SAASC,KAAO,+CAIvB,OACEC,EAAA3J,EAAA4J,cAAA,WACED,EAAA3J,EAAA4J,cAACC,EAAA,EAAKC,KAAN,KACEH,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAOE,KAAK,OAAOC,UAAQ,EAACC,IAAKrK,KAAKyJ,MAAMG,KAAKU,wDAOvD,OACEP,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAOM,MAAI,EAACC,QAASxK,KAAKyK,mBAAoBC,GAAG,QAAQC,SAAS,iBAChEZ,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAMW,OAAK,EAACC,UAAQ,GAClBd,EAAA3J,EAAA4J,cAACC,EAAA,EAAKC,KAAN,CAAWY,QAAS9K,KAAKsJ,cAAzB,qDAQN,OACE,sCAKF,OACES,EAAA3J,EAAA4J,cAAA,WACED,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAMc,UAAQ,EAACC,WAAS,GACtBjB,EAAA3J,EAAA4J,cAACC,EAAA,EAAKC,KAAN,CAAWe,KAAK,aAAaC,GAAG,IAAIpB,KFzCbqB,EAASC,uCAAwBC,WE0CxDtB,EAAA3J,EAAA4J,cAACC,EAAA,EAAKqB,KAAN,CAAWX,SAAS,SAEhB3K,KAAKyJ,MAAMG,KAAO5J,KAAKuL,iBAAmBvL,KAAKwL,2BAlDxCC,aA+DNC,cAJS,SAACC,GAAD,MAAY,CAClC/B,KAAM+B,EAAM/B,OAGC8B,CAAyBvC,GC3ClCyC,cAEJ,SAAAA,IAAc,IAAAxG,EAAA,OAAA3C,OAAAgC,EAAA,EAAAhC,CAAAzC,KAAA4L,IACZxG,EAAA3C,OAAA2G,EAAA,EAAA3G,CAAAzC,KAAAyC,OAAA4G,EAAA,EAAA5G,CAAAmJ,GAAAhF,KAAA5G,QA8BF6L,SA/BcpJ,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KA+BH,SAAAvF,IAAA,IAAA2E,EAAAiH,EAAAC,EAAA9L,UAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAOqE,EAAPkH,EAAAxI,OAAA,QAAAhE,IAAAwM,EAAA,GAAAA,EAAA,GAAY,GACrBxD,QAAQyD,IAAI,aACP5G,EAAKuG,MAAM/G,YAIRkH,EAAOjE,IAAEoE,KAAK7G,EAAK8G,YAAYC,SAAS7F,IAAI,SAAC8F,GAAD,OAAQA,EAAG5E,UAC7DK,IAAEwE,MAAM,GAAGrG,QAAQ,kBACjBZ,EAAK8G,YAAYI,WAAWR,EAAKS,KAAKC,MAAMD,KAAKE,SAAWX,EAAKvI,aALnE6B,EAAK8G,YAAYQ,KAAK7H,GAHf,wBAAAvE,EAAAS,SAAAb,EAAAF,SA/BGoF,EA4CdtB,iBA5Cc,eAAAyB,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KA4CK,SAAAtE,EAAOwL,GAAP,IAAAC,EAAA,OAAAzM,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UACZqH,IAAEgF,IAAIzH,EAAKuG,MAAMmB,UAAWH,EAAKxG,IADrB,CAAA9E,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EAEKuE,EAAA,GAAApE,OAAwBgM,EAAKI,MAAMC,MAAnC,KAAArM,OAA4CgM,EAAK1B,OAFtD,OAET2B,EAFSvL,EAAAR,KAIfuE,EAAK6H,SAAS,SAACtB,GAAD,OAAAlJ,OAAAyK,EAAA,EAAAzK,CAAA,GACTkJ,EADS,CAEZmB,UAAUrK,OAAAyK,EAAA,EAAAzK,CAAA,GACLkJ,EAAMmB,UADFrK,OAAAE,EAAA,EAAAF,CAAA,GAENkK,EAAKxG,GAAKyG,QARA,wBAAAvL,EAAAN,SAAAI,EAAAnB,SA5CL,gBAAAiB,GAAA,OAAAsE,EAAAxF,MAAAC,KAAAC,YAAA,GAAAmF,EA0Fd+H,oBAAsB,SAACnF,GACrB,IAAMG,EAAa/C,EAAK8G,YAAYhG,YACpC,OAAOd,EAAKgI,WAAWjF,EAAWH,EAAIR,QAASW,EAAWH,EAAIZ,UAAWY,EAAIP,QA1F7ErC,EAAKuG,MAAQ,CAEXQ,OAAQ,GACRW,UAAW,GACXO,eAAgB,GAChBzI,YAAY,GAGdQ,EAAKyG,SAAWhE,IAAEyF,SAASlI,EAAKyG,SAAU,KAE1CzG,EAAKmI,aAAc,EACnBnI,EAAK8G,YAAc,IAAI/G,EAAY,WAG7BC,EAAKmI,cACPnI,EAAKmI,aAAc,GAGrB,IAAMpB,EAAS/G,EAAK8G,YAAYC,SAChC/G,EAAK6H,SAAS,CACZd,SACAvH,WAAYQ,EAAK8G,YAAYtH,aAE/BuH,EAAOnG,QAAQ,SAACwH,GAAD,OAAOpI,EAAKtB,iBAAiBsB,EAAK8G,YAAYhG,YAAYsH,EAAEhG,aAG7EpC,EAAKyG,SAAS,IA5BFzG,gNA4DVpF,UACwBoG,iBAAoBrB,0BAA6B+G,+BAAQ,sBAAQ/G,YAAJuB,yBAArDD,8CAA9BgH,0BADGJ,2EHpFgBQ,EGwFrB3L,EAAA4L,GHvFJC,gBAAQF,EAAIG,UAAYH,EAAIG,SAASC,MAAQJ,EAAIG,SAASC,KAAKC,QAAWL,EAAIM,8CADzE,IAAoBN,yGG4FVd,GACb,OACE5C,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAM/C,IAAKyF,EAAKxG,IACd4D,EAAA3J,EAAA4J,cAACC,EAAA,EAAK+D,MAAN,CAAY7D,KAAK,OAAOE,KAAMsC,EAAKI,OAAS,IAAIzC,WAAYF,UAAU,IACtEL,EAAA3J,EAAA4J,cAACC,EAAA,EAAKgE,QAAN,KACElE,EAAA3J,EAAA4J,cAACC,EAAA,EAAKiE,OAAN,CAAahD,GAAG,IAAIpB,KAAM6C,EAAKwB,UAAWxB,EAAKyB,WAC/CrE,EAAA3J,EAAA4J,cAACC,EAAA,EAAKoE,KAAN,QAAA1N,OAAegM,EAAKI,MAAMC,MAA1B,KAAArM,OAAmCgM,EAAK2B,cACxCvE,EAAA3J,EAAA4J,cAACC,EAAA,EAAKsE,MAAN,MAAc5B,EAAK6B,QAAU,IAAIC,KAAK,2CAoBnC9B,EAAM+B,GAAsBzO,UAAAsD,OAAA,QAAAhE,IAAAU,UAAA,IAAAA,UAAA,OAC/B2M,EAAQ5M,KAAK2L,MAAMmB,UAAUH,EAAKxG,MAAQwG,EAAKgC,SAALlM,OAAAE,EAAA,EAAAF,CAAA,GAAmBkK,EAAKgC,SAAW,GAAM,IACnFC,EAAanM,OAAOoM,KAAKjC,GAC5B9E,OAAO,SAACgH,GAAD,OAAWjH,IAAEkH,MAAMD,KAC1BE,KAAK,SAAC5O,EAAG6O,GAAJ,OAAUrC,EAAMqC,GAAKrC,EAAMxM,KAAIoD,MAAM,EAAG,GAEhD,OACEuG,EAAA3J,EAAA4J,cAAA,OAAKkF,UAAU,iBAAiBhI,IAAKyF,EAAKxG,IACxC4D,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAMH,KAAM6C,EAAKwB,SAAUgB,OAAO,SAASC,IAAI,uBAC7CrF,EAAA3J,EAAA4J,cAACC,EAAA,EAAKgE,QAAN,KACElE,EAAA3J,EAAA4J,cAACC,EAAA,EAAKiE,OAAN,CAAagB,UAAU,kBACrBnF,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAOiF,UAAU,mBAAmB9E,UAAQ,EAACC,IAAMsC,EAAKI,OAASJ,EAAKI,MAAMzC,YAAe,KAC1FqC,EAAKyB,WAGNQ,EAAWtI,IAAI,SAACwI,GAAD,OACb/E,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CACE/C,IAAK4H,EACLO,MAAO,CAAEC,YAAaC,EAAYT,IAAS,IAAIU,MAAOA,MAAO,SAC7DrF,KAAK,QACH2E,KAGR/E,EAAA3J,EAAA4J,cAACC,EAAA,EAAKwF,YAAN,KAAmB9C,EAAK2B,cAGxBI,GACE3E,EAAA3J,EAAA4J,cAACC,EAAA,EAAKgE,QAAN,CAAcyB,OAAK,GACjB3F,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAMgB,KAAK,UADb,cAEcyD,EAAYN,kEAUpC,OACErE,EAAA3J,EAAA4J,cAAA,WACED,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAQiB,GAAG,KAAKyE,MAAI,EAACC,UAAU,UAC7B7F,EAAA3J,EAAA4J,cAACC,EAAA,EAAOgE,QAAR,KACElE,EAAA3J,EAAA4J,cAAA,QAAM6F,KAAK,MAAMC,aAAW,aAA5B,kBAGJ/F,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAQiB,GAAG,KAAK0E,UAAU,UACxB7F,EAAA3J,EAAA4J,cAAA,gEACAD,EAAA3J,EAAA4J,cAAA,SAAGD,EAAA3J,EAAA4J,cAAA,KAAGF,KAAK,6BAA6BqF,OAAO,SAASC,IAAI,uBAAzD,8FAOT,OAAOrF,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAQ8F,QAAM,GAAd,4CAQP,OACEhG,EAAA3J,EAAA4J,cAACD,EAAA3J,EAAM4P,SAAP,KACEjG,EAAA3J,EAAA4J,cAACiG,EAAD,MAEAlG,EAAA3J,EAAA4J,cAAA,OAAKkF,UAAU,oCACZlP,KAAKkQ,8DAMI,IAAAtI,EAAA5H,KAChB,GAAiC,IAA7BA,KAAK2L,MAAMQ,OAAO5I,OACpB,OAAOvD,KAAK2L,MAAM/G,WAChB5E,KAAKmQ,6BACLnQ,KAAKoQ,gBAET,IAAMC,EAAS9D,KAAK+D,IAAI/D,KAAKgE,KAAKC,SAAS3C,KAAK4C,YAAc,KAAM,GACpE,OACE1G,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAY5E,SAAU,kBAAMuC,EAAK8I,gBAC/B3G,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAM0G,QAASN,EAAQO,UAAQ,GAE3B/I,IAAEwE,MAAMgE,GAAQ/J,IAAI,SAACuK,GAAD,OAClB9G,EAAA3J,EAAA4J,cAACC,EAAA,EAAK6G,OAAN,CAAa5J,IAAK2J,GACfjJ,EAAK+D,MAAMQ,OAAOrE,OAAO,SAACD,EAAGkJ,GAAJ,OAAYA,EAAMV,IAAWQ,IAAKvK,IAAIsB,EAAKuF,yBAK7EpD,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAY/G,OAAQ,CAAC,GAAI,KAAM8N,WAAYhR,KAAK6L,SAAUoF,MAAM,EAAOC,aAAa,GAClFnH,EAAA3J,EAAA4J,cAACC,EAAA,EAAKkH,MAAN,KACEpH,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAMW,OAAK,EAAC4E,MAAM,SAASH,MAAO,CAAC+B,OAAQ,IAAKtG,QAAS9K,KAAK6L,SAAU+E,UAAQ,GAE5E5Q,KAAKkM,YAAY7D,KAAO0B,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAQ8F,QAAQ,IAAWhG,EAAA3J,EAAA4J,cAACC,EAAA,EAAKgE,QAAN,gEAS/C,IAAAoD,EAAArR,KAChB,OACE+J,EAAA3J,EAAA4J,cAACC,EAAA,EAAKkH,MAAN,KAEInR,KAAK2L,MAAM0B,eAAe/G,IAAI,SAACqG,GAAD,OAAU0E,EAAKjE,WAAWT,aA9M/ClB,aAyNJC,cAJS,SAACC,GAAD,MAAY,CAClC/B,KAAM+B,EAAM/B,OAGC8B,CAAyBE,GChPnBA,mLAEjB,OAAO7B,EAAA3J,EAAA4J,cAAA,kDAFuByB,aCIb6F,2LAEjB,IAAMC,EAAc,GAAA5Q,OAAMzB,EAAOC,cAAb,yBAAAwB,OAAkD6Q,mBAAmBnN,OAAOwF,SAASC,OACzG,OACEC,EAAA3J,EAAA4J,cAAA,OAAKkF,UAAU,qBACbnF,EAAA3J,EAAA4J,cAAA,MAAIkF,UAAU,gBACZnF,EAAA3J,EAAA4J,cAAA,QAAM6F,KAAK,MAAMC,aAAW,WAA5B,gBADF,qCAGA/F,EAAA3J,EAAA4J,cAAA,mEACAD,EAAA3J,EAAA4J,cAAA,WACAD,EAAA3J,EAAA4J,cAAA,WACAD,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAQiB,GAAG,IAAIpB,KAAMyH,GAAgBxH,EAAA3J,EAAA4J,cAACC,EAAA,EAAD,CAAMgB,KAAK,WAAhD,UACSlB,EAAA3J,EAAA4J,cAAA,WADT,gCAX6ByB,uBCc/BgG,eACJ,SAAAA,EAAYhI,GAAO,IAAArE,EAAA,OAAA3C,OAAAgC,EAAA,EAAAhC,CAAAzC,KAAAyR,IACjBrM,EAAA3C,OAAA2G,EAAA,EAAA3G,CAAAzC,KAAAyC,OAAA4G,EAAA,EAAA5G,CAAAgP,GAAA7K,KAAA5G,KAAMyJ,KAIRiI,oBALmBjP,OAAA+C,EAAA,EAAA/C,CAAAtC,EAAAC,EAAAqF,KAKG,SAAAvF,IAAA,IAAAyR,EAAAC,EAAAxQ,EAAAwI,EAAA,OAAAzJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdmR,EAAc,SAAdA,IACJ,IAAKvM,EAAKyM,QACR,OAAOC,WAAWH,EAAa,KAE5BtN,OAAOwF,SAASC,KAAKiI,SAAS,aACjC3M,EAAKyM,QAAQ5M,KAAK,aAGhB2M,EAAW,SAAXA,IACJ,IAAKxM,EAAKyM,QACR,OAAOC,WAAWF,EAAU,KAEzBvN,OAAOwF,SAASC,KAAKiI,SAAS,UACjC3M,EAAKyM,QAAQ5M,KAAK,UAdF3E,EAAAC,KAAA,EAmBZa,EACJ+J,EAAS9G,OAAOwF,SAASC,MAAM,GAAMkI,MAAM5Q,cAC3C+J,EAAS9G,OAAOwF,SAASC,KAAKtH,MAAM,KAAK,IAAI,GAAMwP,MAAM5Q,cACzD6Q,IAtBgB,CAAA3R,EAAAE,KAAA,eAAAF,EAAAM,OAAA,SAwBT+Q,KAxBS,cA6BlBvM,EAAKqE,MAAMC,SAAS,CAClBC,KAAM,cACNvI,iBA/BgBd,EAAAE,KAAA,EAkCCuE,EAAY3D,GAlCb,OAkCZwI,EAlCYtJ,EAAAO,KAmClBuE,EAAKqE,MAAMC,SAAS,CAClBC,KAAM,cACNvI,eACAwI,SAEFgI,IAxCkBtR,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAkG,GAAAlG,EAAA,SA2ClBiI,QAAQyD,IAAR1L,EAAAkG,IA3CkBlG,EAAAM,OAAA,SA4CX+Q,KA5CW,yBAAArR,EAAAS,SAAAb,EAAAF,KAAA,aAHpBoF,EAAKsM,sBAFYtM,wEAqDV,IAAAwC,EAAA5H,KACP,OACE+J,EAAA3J,EAAA4J,cAAA,OAAKkF,UAAU,OACbnF,EAAA3J,EAAA4J,cAACkI,EAAA,eAAD,CAAgBvH,SAAS,aAAawH,iBAAiB,IACvDpI,EAAA3J,EAAA4J,cAACoI,GAAA,EAAD,CAAQC,IAAK,SAACC,GAAa1K,EAAKiK,QAAUS,EAAOT,UAC/C9H,EAAA3J,EAAA4J,cAACoI,GAAA,EAAD,KACErI,EAAA3J,EAAA4J,cAACoI,GAAA,EAAD,CAAOG,KAAK,QAAQC,UAAW5G,IAC/B7B,EAAA3J,EAAA4J,cAACoI,GAAA,EAAD,CAAOG,KAAK,WAAWC,UAAWlB,IAClCvH,EAAA3J,EAAA4J,cAACoI,GAAA,EAAD,CAAOG,KAAK,cAAcC,UAAWC,cA9D/BhH,aAsEHC,iBAAU+F,IChFnBiB,GAAcC,QACW,cAA7BtO,OAAOwF,SAAS+I,UAEe,UAA7BvO,OAAOwF,SAAS+I,UAEhBvO,OAAOwF,SAAS+I,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3H,QACfqH,UAAUC,cAAcQ,WAK1BlL,QAAQyD,IAAI,6CAKZzD,QAAQyD,IAAI,2CAMrB5D,MAAM,SAAAI,GACLD,QAAQC,MAAM,4CAA6CA,mBCjE3DkL,WAAQC,aCbC,WAAgD,IAA/ChI,EAA+C1L,UAAAsD,OAAA,QAAAhE,IAAAU,UAAA,GAAAA,UAAA,GAAvC,CAAE2T,iBAAarU,GAAasU,EAAW5T,UAAAsD,OAAA,EAAAtD,UAAA,QAAAV,EAC7D,OAAQsU,EAAOlK,MACb,IAAK,cACH,OAAOlH,OAAAyK,EAAA,EAAAzK,CAAA,GACFkJ,EADL,CAEEvK,aAAcyS,EAAOzS,aACrBwI,KAAMiK,EAAOjK,OAEjB,IAAK,gBACH,OAAOnH,OAAAyK,EAAA,EAAAzK,CAAA,GACFkJ,EADL,CAEEvK,kBAAc7B,EACdqK,UAAMrK,IAEV,QACE,OAAOoM,IDDXtH,OAAOyP,8BAAgCzP,OAAOyP,+BAC9CC,aTR6B,SAAAL,GAAK,OAAI,SAAAlT,GAAI,OAAI,SAAAqT,GAC9C,IDO6BG,ECPvBC,EAASzT,EAAKqT,GAEpB,GAAoB,gBAAhBA,EAAOlK,KAAwB,KACzBvI,EAAiBsS,EAAMQ,WAAvB9S,aDImB4S,ECHR5S,EDIrB5B,EAAS2U,SAASnS,QAAlB,wBAAArB,OAAuDqT,GACvD1U,EAAU0U,ECJR3P,OAAOC,aAAa8P,QAZY,uBAYkBhT,GAGpD,OAAO6S,QSGTI,IAASC,OACPvK,EAAA3J,EAAA4J,cAACuK,EAAA,EAAD,CAAUb,MAAOA,IACf3J,EAAA3J,EAAA4J,cAACwK,GAAD,OAEDhE,SAASiE,eAAe,SDJZ,WACb,GAA6C,kBAAmBzB,UAAW,CAGzE,GADkB,IAAI0B,IAAItJ,sCAAwB/G,OAAOwF,UAC3C8K,SAAWtQ,OAAOwF,SAAS8K,OAIvC,OAGFtQ,OAAOuQ,iBAAiB,OAAQ,WAC9B,IAAM7B,EAAK,GAAApS,OAAMyK,sCAAN,sBAEPsH,IAiDV,SAAiCK,GAE/B8B,MAAM9B,GACHI,KAAK,SAAAvF,GAGkB,MAApBA,EAASE,SACuD,IAAhEF,EAAS5L,QAAQtB,IAAI,gBAAgBoU,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7B9O,OAAOwF,SAASoL,aAKpBnC,GAAgBC,KAGnB3K,MAAM,WACLG,QAAQyD,IACN,mEArEAkJ,CAAwBnC,GAIxBC,UAAUC,cAAc8B,MAAM5B,KAAK,WACjC5K,QAAQyD,IACN,+GAMJ8G,GAAgBC,MCvBxBoC","file":"static/js/main.8fdbe072.chunk.js","sourcesContent":["export default {\n  oauthLoginURL: 'https://d945ipi8b7.execute-api.us-east-1.amazonaws.com/dev/oauth_login',\n  userBasedRecommendURL: 'https://d945ipi8b7.execute-api.us-east-1.amazonaws.com/dev/user_rcmd',\n\n  similarRepoAPIURL: 'https://k8rgby9lr1.execute-api.us-east-1.amazonaws.com/dev/repo/similar',\n};\n","import axios from 'axios';\nimport config from './config';\n\n/**\n * github token\n * @type {string}\n */\nlet ghToken = undefined;\nexport const ghClient = axios.create({\n  baseURL: \"https://api.github.com\",\n});\n\nexport const similarRepoClient = axios.create({\n  baseURL: config.similarRepoAPIURL,\n});\n\nexport const setGithubToken = (token) => {\n  ghClient.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n  ghToken = token;\n}\n\nexport async function getUserBasedRecommend() {\n  if (!ghToken) {\n    throw new Error('github login required for `getUserBasedRecommend`');\n  }\n  return (await axios.get(`${config.userBasedRecommendURL}?limit=20&ghToken=${ghToken}`)).data;\n}\n\nexport async function getUser(access_token) {\n  return (await ghClient.get(`/user?access_token=${access_token}`)).data\n}\n\nfunction parseLink(link) {\n  // '<https://api.github.com/events?page=2>; rel=\"next\", <https://api.github.com/events?page=10>; rel=\"last\"'\n  const [, url1, tag1, url2, tag2] = link.split(/<(.+?)>;\\s*rel=\"(.+?)\",\\s*<(.+?)>;\\s*rel=\"(.+?)\"/);\n  return {\n    [tag1]: url1,\n    [tag2]: url2,\n  };\n}\n\nexport async function getUserStars(nextPageURL) {\n  const resp = await ghClient.get(nextPageURL || '/user/starred?page=1');\n  const { next, last } = parseLink(resp.headers.link || '');\n  return {\n    data: resp.data,\n    nextStarPageURL: last === nextPageURL ? undefined : next,\n  };\n}\n\nexport async function getSimilar(rid, offset = 0, limit = 5) {\n  const sims = (await similarRepoClient.get(`/?rid=${rid}&limit=${offset + limit}`)).data;\n  return sims.slice(offset, sims.length);\n}\n\nexport async function getRepoDetail(rid) {\n  return (await ghClient.get(`repositories/${rid}`)).data;\n}\n\nexport async function getRepoLanguages(repoIdentifier) {\n  return (await ghClient.get(`/repos/${repoIdentifier}/languages`)).data;\n}\n","import * as api from '../common/api';\n\nexport const TokenLocalstorageKey = 'TokenLocalstorageKey';\n\nexport const loadGithubTokenFromLocalStorage = () => {\n  return window.localStorage.getItem(TokenLocalstorageKey);\n}\n\nexport const saveGithubToken = store => next => action => {\n  const result = next(action)\n\n  if (action.type === 'SET_GH_USER') {\n    const { access_token } = store.getState();\n    api.setGithubToken(access_token);\n    window.localStorage.setItem(TokenLocalstorageKey, access_token);\n  }\n\n  return result;\n}\n","import { toast as _toast } from 'react-toastify';\nimport * as urlParse from 'url-parse';\n\nexport function toastError(err) {\n  _toast((err.response && err.response.body && err.response.body.status) || err.toString());\n}\n\nexport function toast(...params) {\n  _toast(...params);\n}\n\nexport const getBaseName = () => urlParse(process.env.PUBLIC_URL).pathname;\n","import * as api from '../common/api';\nimport _ from 'lodash';\n\nclass StarSource {\n  constructor() {\n    this._pool = [ ];\n    this._nextPageURL = undefined;\n    this.reachedEnd = false;\n  }\n\n  /**\n   * pop `nn` repos\n   * @param {number} nn\n   * @returns {[object]}\n   */\n  async pop(nn) {\n    if (this.reachedEnd) {\n      return [];\n    }\n\n    // try to get from in memory pool\n    if (this._pool.length >= nn) {\n      return this._pool.splice(0, nn);\n    }\n    // load next page\n    const { data, nextStarPageURL } = await api.getUserStars(this._nextPageURL);\n    this.reachedEnd = this._nextPageURL === nextStarPageURL;\n    this._nextPageURL = nextStarPageURL;\n    this._pool.push(...data);\n    return this._pool.splice(0, nn);\n  }\n}\n\n// recommendo\n// {\n//   from_rid,\n//   to_rid,\n//   score: 0~1,\n//   reason: 'star' || 'show_more',\n// }\n//\n// show_more_hando\n// {\n//   rid\n// }\nexport class ListoSource {\n\n  /**\n   * @param {function} onUpdate callend whenever any state changes\n   */\n  constructor(onUpdate=() => { }) {\n\n    this.onUpdate = onUpdate;\n    this.starSource = new StarSource();\n    this._recommendoPool = [];\n    this._listos = [];\n    this.reachedEnd = false;\n    // rid -> repo object\n    this.repoDetails = {};\n  }\n\n  listos() {\n    return [...this._listos];\n  }\n\n  _populateRecommendoPool(from_rid, similars) {\n    this._recommendoPool.push(...similars.map((sim) => ({\n      from_rid,\n      to_rid: sim.rid,\n      score: sim.sim,\n    })));\n  }\n\n  async _populateListo(recs) {\n    // remove duplicates\n    const listoRids = _.map(this._listos, 'to_rid').filter((rid) => !!rid);\n    const nonDuplicateRecs = _.reject(recs, rec => _.includes(listoRids, rec.to_rid));\n\n    // populate repo detail\n    await Promise.all(nonDuplicateRecs.map(async (rec) => {\n      // finally push processed rec object to result pool\n      const repoDetail = await api.getRepoDetail(rec.to_rid).catch(() => undefined);\n      if (!repoDetail) {\n        return;\n      }\n      this.repoDetails[rec.to_rid] = repoDetail;\n      this._listos.push(rec);\n    }));\n    this.onUpdate();\n  }\n\n  async showMoreOf(rid) {\n    if (this.busy) {\n      return;\n    }\n    this.busy = true;\n    this.onUpdate();\n    try {\n      await this._showMoreOf(rid);\n    } catch (err) {\n      console.error(err);\n    }\n    this.busy = false;\n    this.onUpdate();\n  }\n\n  async _showMoreOf(rid) {\n    const moreFromListPool = this._recommendoPool.filter((rec) => rec.from_rid === rid);\n    if (moreFromListPool.length > 0) {\n      this._listos = _.flatmap(this._listos, (listo) => {\n        if (listo.to_rid === rid) {\n          return [listo, ...moreFromListPool];\n        }\n        return [listo];\n      });\n      this.onUpdate();\n      return;\n    }\n\n    const sims = await api.getSimilar(rid, this._listos.filter((listo) => listo.from_rid === rid).length);\n    await this._populateListo(sims.map((sim) => ({\n      from_rid: rid,\n      to_rid: sim.rid,\n      score: sim.sim,\n    })));\n  }\n\n  _grow = async (nn) => {\n    // 1. pop from local pool\n    const recs = this._recommendoPool.splice(0, nn);\n    if (recs.length === nn) {\n      await this._populateListo(recs);\n      return;\n    } else if (recs.length > 0) {\n      await this._populateListo(recs);\n      nn -= recs.length;\n    }\n\n    // 2. if local pool not have enough, load more from starSource\n    // since every star source can be flatmapped to 5 repos, pop `nn` star sources should be \n    // enough to populate nn*5 recommendo's into _recommendoPool\n    const starRepos = await this.starSource.pop(nn);\n\n    // keep starRepos object in repoDetails cache\n    starRepos.forEach((sr) => this.repoDetails[sr.id] = sr);\n\n    if (starRepos.length === 0) {\n      this.reachedEnd = true;\n      this.onUpdate();\n    } else {\n      // fire `getSimilar` on all starred repos concurrently, wait for all of them to finish then fulfill this grow\n      await Promise.all(starRepos.map(async (sr) => {\n        this._populateRecommendoPool(sr.id, await api.getSimilar(sr.id));\n      }));\n      await this._populateListo(this._recommendoPool.splice(0, nn));\n    }\n  }\n\n  /**\n   * @param {number} nn \n   * @param {function} then \n   */\n  async grow(nn) {\n    if (this.busy || this.reachedEnd) {\n      return;\n    }\n    this.busy = true;\n    this.onUpdate();\n    try {\n      await this._grow(nn);\n    } catch (err) {\n      console.error(err);\n    }\n    this.busy = false;\n    this.onUpdate();\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Image, Menu, Popup } from 'semantic-ui-react';\nimport * as util from '../common/util';\n\nclass Navbar extends Component {\n\n  constructor() {\n    super();\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    this.props.dispatch({\n      type: 'SET_GH_USER',\n      access_token: undefined,\n      user: undefined,\n    });\n    window.location.href = '/';\n  }\n\n  renderUserAvatar() {\n    return (\n      <div>\n        <Menu.Item >\n          <Image size=\"mini\" circular src={this.props.user.avatar_url} />\n        </Menu.Item>\n      </div>\n    );\n  }\n\n  renderLoggedIn() {\n    return (\n      <Popup wide trigger={this.renderUserAvatar()} on='click' position='bottom center' >\n        <Menu fluid vertical>\n          <Menu.Item onClick={this.handleLogout}>Logout</Menu.Item>\n        </Menu>\n      </Popup>\n    );\n  }\n\n  renderNotLogIn() {\n    // not used for now\n    return (\n      null\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu pointing secondary>\n          <Menu.Item name='Twinkeydow' as='a' href={util.getBaseName()} />\n          <Menu.Menu position='right'>\n            {\n              this.props.user ? this.renderLoggedIn() : this.renderNotLogIn()\n            }\n          </Menu.Menu>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport languageMap from 'language-map';\n\nimport {\n  Grid,\n  Visibility,\n  Responsive,\n  Item,\n  Image,\n  Header,\n  Loader,\n  Label,\n  Card,\n  Icon,\n} from 'semantic-ui-react';\n\nimport '../css/Home.css';\n\nimport * as util from '../common/util';\nimport * as api from '../common/api';\nimport { ListoSource } from '../model/listo';\nimport Navbar from './Navbar';\n\nclass Home extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      // list of user starred repo objects\n      listos: [],\n      repoLangs: { },\n      userBasedRepos: [],\n      reachedEnd: false,\n    }\n\n    this.showMore = _.throttle(this.showMore, 1000);\n\n    this.firstRender = true;\n    this.listoSource = new ListoSource(() => {\n      // show only 10 items so that not too much loading\n      // render some more items to cover entire screen\n      if (this.firstRender) {\n        this.firstRender = false;\n        // this.showMore();\n      }\n      const listos = this.listoSource.listos();\n      this.setState({\n        listos,\n        reachedEnd: this.listoSource.reachedEnd,\n      });\n      listos.forEach((r) => this.getRepoLanguages(this.listoSource.repoDetails[r.to_rid]));\n    });\n\n    this.showMore(10);\n  }\n\n  showMore = async (nn = 30) => {\n    console.log('show more');\n    if (!this.state.reachedEnd) {\n      this.listoSource.grow(nn);\n    } else {\n      // randomly choose some repo recommend on ui\n      const rids = _.uniq(this.listoSource.listos().map((li) => li.to_rid));\n      _.range(5).forEach(() => \n        this.listoSource.showMoreOf(rids[Math.floor(Math.random() * rids.length)])\n      );\n    }\n  }\n\n  getRepoLanguages = async (repo) => {\n    if (!_.has(this.state.repoLangs, repo.id)) {\n      const langs = await api.getRepoLanguages(`${repo.owner.login}/${repo.name}`);\n      \n      this.setState((state) => ({\n        ...state,\n        repoLangs: {\n          ...state.repoLangs,\n          [repo.id]: langs,\n        },\n      }));\n    }\n  }\n\n  async reloadUserBasedRecommends() {\n    try {\n      this.setState({\n        userBasedRepos: await Promise.all(((await api.getUserBasedRecommend()).rids || []).map(api.getRepoDetail)),\n      });\n    } catch (error) {\n      util.toastError(error);\n    }\n  }\n\n  renderUserStar(repo) {\n    return (\n      <Item key={repo.id}>\n        <Item.Image size='tiny' src={(repo.owner || {}).avatar_url} circular={true} />\n        <Item.Content>\n          <Item.Header as='a' href={repo.html_url}>{repo.full_name}</Item.Header>\n          <Item.Meta>{`${repo.owner.login}/${repo.description}`}</Item.Meta>\n          <Item.Extra>{(repo.topics || []).join(' ')}</Item.Extra>\n        </Item.Content>\n      </Item>\n    );\n  }\n\n  /**\n   * { basedOn: rid, score: number, rid: string }\n   * \n   * @param {object} rec\n   * @param {string} rec.from_rid\n   * @param {number} rec.to_rid\n   * @param {string} rec.score\n   * @param {string} rec.reason 'star' || 'show_more'\n   */\n  renderRecommendRepo = (rec) => {\n    const repoDetail = this.listoSource.repoDetails;\n    return this.renderRepo(repoDetail[rec.to_rid], repoDetail[rec.from_rid], rec.score);\n  }\n\n  renderRepo(repo, basedOnRepo, score=1) {\n    const langs = this.state.repoLangs[repo.id] || (repo.language ? { [repo.language]: 1 } : { });\n    const firstLangs = Object.keys(langs)\n      .filter((lang) => !_.isNil(lang))\n      .sort((a, b) => langs[b] - langs[a]).slice(0, 2);\n\n    return (\n      <div className='repo-container' key={repo.id}>\n        <Card href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Card.Content>\n            <Card.Header className='home-repo-name'>\n              <Image className='home-repo-avatar' circular src={(repo.owner && repo.owner.avatar_url) || ''}></Image>\n              {repo.full_name}\n            </Card.Header>\n            {\n              firstLangs.map((lang) => (\n                <Label\n                  key={lang}\n                  style={{ background: (languageMap[lang] || {}).color, color: 'white' }}\n                  size='tiny'\n                  >{lang}</Label>\n              ))\n            }\n            <Card.Description>{repo.description}</Card.Description>\n          </Card.Content>\n          {\n            basedOnRepo && (\n              <Card.Content extra>\n                <Icon name='heart' />\n                similar to {basedOnRepo.full_name}\n              </Card.Content>\n            )\n          }\n        </Card>\n      </div>\n    )\n  }\n\n  renderNoRecommendAvailable() {\n    return (\n      <div>\n        <Header as='h1' icon textAlign='center'>\n          <Header.Content>\n            <span role='img' aria-label='not found'>🤷</span>\n          </Header.Content>\n        </Header>\n        <Header as='h3' textAlign='center'>\n          <p>Sorry you don't have enough interactions on Github.</p>\n          <p><a href=\"https://github.com/explore\" target=\"_blank\" rel=\"noopener noreferrer\">Go star some repos you like and come back later</a></p>\n        </Header>\n      </div>\n    );\n  }\n\n  renderLoading() {\n    return <Loader active>Loading</Loader>;\n  }\n\n  render() {\n    // const panes = [\n    //   { menuItem: 'Item Based', render: () => this.renderItemBased() },\n    //   { menuItem: 'User Based', render: () => this.renderUserBased() },\n    // ];\n    return (\n      <React.Fragment>\n        <Navbar />\n        {/* <Tab menu={{ secondary: true }} panes={panes} /> */}\n        <div className='recommendation-content-container'>\n          {this.renderItemBased()}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderItemBased() {\n    if (this.state.listos.length === 0) {\n      return this.state.reachedEnd ?\n        this.renderNoRecommendAvailable() :\n        this.renderLoading();\n    }\n    const colcnt = Math.max(Math.ceil(document.body.clientWidth / 400), 1);\n    return (\n      <Responsive onUpdate={() => this.forceUpdate()}>\n        <Grid columns={colcnt} centered>\n          {\n            _.range(colcnt).map((col) => (\n              <Grid.Column key={col}>\n                {this.state.listos.filter((_, idx) => idx % colcnt === col).map(this.renderRecommendRepo)}\n              </Grid.Column>\n            ))\n          }\n        </Grid>\n        <Visibility offset={[10, 100]} onOnScreen={this.showMore} once={false} fireOnMount={true}>\n          <Card.Group>\n            <Card fluid color='orange' style={{height: 50}} onClick={this.showMore} centered>\n              {\n                this.listoSource.busy ? <Loader active={true} /> : <Card.Content>Load More</Card.Content>\n              }\n            </Card>\n          </Card.Group>\n        </Visibility>\n      </Responsive>\n    );\n  }\n\n  renderUserBased() {\n    return (\n      <Item.Group>\n        {\n          this.state.userBasedRepos.map((repo) => this.renderRepo(repo))\n        }\n      </Item.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n  render() {\n    return <div>Validating OAuth callback...</div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\n\nimport '../css/Welcome.css';\nimport config from '../common/config';\n\nexport default class Welcome extends Component {\n  render() {\n    const githubOAuthURL = `${config.oauthLoginURL}?oauth_done_redirect=${encodeURIComponent(window.location.href)}`;\n    return (\n      <div className='welcome-container'>\n        <h1 className='welcome-logo'>\n          <span role='img' aria-label='welcome'>🙋</span> hi welcome to project Twinkeydow\n        </h1>\n        <h5>it gives you personalized Github repo recommendations</h5>\n        <br />\n        <br />\n        <Button as=\"a\" href={githubOAuthURL}><Icon name=\"github\" />\n          Try it!<br />\n          Login through Github\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../css/App.css';\n\nimport { ToastContainer } from 'react-toastify';\nimport * as urlParse from 'url-parse';\n\nimport * as middleware from '../redux/middleware';\nimport * as api from '../common/api';\n\nimport Home from './Home';\nimport OAuth_callback from './OAuth_callback';\nimport Welcome from './Welcome';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.redirectIfNecessary();\n  }\n\n  redirectIfNecessary = async () => {\n    const gotoWelcome = () => {\n      if (!this.history) {\n        return setTimeout(gotoWelcome, 100);\n      }\n      if (!window.location.href.endsWith('/welcome')) {\n        this.history.push('/welcome');\n      }\n    };\n    const gotoHome = () => {\n      if (!this.history) {\n        return setTimeout(gotoHome, 100);\n      }\n      if (!window.location.href.endsWith('/home')) {\n        this.history.push('/home');\n      }\n    };\n\n    try {\n      const access_token =\n        urlParse(window.location.href, true).query.access_token ||\n        urlParse(window.location.href.split('#')[1], true).query.access_token ||\n        middleware.loadGithubTokenFromLocalStorage();\n      if (!access_token) {\n        return gotoWelcome();\n      }\n\n      // if token presents, set it to api first\n      // valid token later\n      this.props.dispatch({\n        type: 'SET_GH_USER',\n        access_token,\n      });\n\n      const user = await api.getUser(access_token);\n      this.props.dispatch({\n        type: 'SET_GH_USER',\n        access_token,\n        user,\n      });\n      gotoHome();\n    }\n    catch (err) {\n      console.log(err);\n      return gotoWelcome();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <ToastContainer position='top-center' hideProgressBar={true} />\n        <Router ref={(router) => { this.history = router.history }}>\n          <Switch>\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/welcome\" component={Welcome} />\n            <Route path=\"/oauth_done\" component={OAuth_callback} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './component/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './redux/reducer';\nimport * as middleware from './redux/middleware';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(middleware.saveGithubToken),\n);\n/* eslint-enable */\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\nregisterServiceWorker();\n","\nexport default (state = { currentUser: undefined }, action) => {\n  switch (action.type) {\n    case 'SET_GH_USER':\n      return {\n        ...state,\n        access_token: action.access_token,\n        user: action.user,\n      }\n    case 'CLEAR_GH_USER':\n      return {\n        ...state,\n        access_token: undefined,\n        user: undefined,\n      };\n    default:\n      return state\n  }\n};\n"],"sourceRoot":""}